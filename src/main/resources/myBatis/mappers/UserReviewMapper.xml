<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.btc.swimpyo.backend.mappers.review.IUserReviewDaoMapper">

    <!-- 등록 - a_r_no 값 들고오가 -->
    <select id="selectArNo" parameterType="String" resultType="String">
        select
        a_r_no
        from
        tbl_user_reservation
        where
            u_r_no = #{u_r_no}
        and
            u_m_email = #{u_m_email}
    </select>

    <!-- 등록 - 이미지를 제외한 review 정보 db 저장 -->
    <insert id="insertReview" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        INSERT INTO tbl_review(
                                u_m_email,
                                u_r_no,
                                r_content,
                                r_sa_point,
                                r_reg_date,
                                r_mod_date,
                                a_r_no)
        SELECT
                                #{u_m_email},
                                #{u_r_no},
                                #{r_content},
                                #{r_sa_point},
                                NOW(),
                                NOW(),
                                a_r_no
        FROM
            tbl_user_reservation
        WHERE
            u_m_email = #{u_m_email}
        AND
            u_r_no = #{u_r_no}
    </insert>

    <!-- 등록 - 리뷰 NO 가져오가 -->
    <select id="selectReviewNo" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto" resultType="Integer">
        SELECT
            max(r_no)
        FROM
            tbl_review
        WHERE
            u_m_email = #{u_m_email}
        and
            a_r_no = #{a_r_no}
        and
            u_r_no = #{u_r_no}
        and
            use_yn = 'Y'
    </select>

    <!-- 등록 - 주소 값들 db 저장 -->
    <insert id="insertReviewAddress" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        insert into tbl_review_xy (r_no, r_xy_address, r_xy_comment, r_xy_longitude, r_xy_latitude, r_xy_reg_date)
        values (#{r_no}, #{r_xy_address}, #{r_xy_comment}, #{r_xy_longitude}, #{r_xy_latitude}, NOW())
    </insert>

    <!-- 등록 - 리뷰 이미지 db 저장 -->
    <insert id="insertReviewImg" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        insert into tbl_review_image(r_no, r_ri_image, r_ri_reg_date, r_ri_mod_date)
        values (#{r_no}, #{r_ri_image}, NOW(), NOW())
    </insert>

    <!-- 등록 - isWrite = 1로 UPDATE -->
    <update id="updateIsWrite" parameterType="Integer">
        update
            tbl_review
        set
            isWrite = 1
        where
            r_no = #{r_no}
    </update>

    <!-- [마이페이지]리스트 조회 - 리뷰 정보 가져오기(이미지 제외) -->
<!--    <select id="selectReviewInfo" parameterType="String" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">-->
<!--        SELECT-->
<!--            r_no,-->
<!--            a_r_no,-->
<!--            u_m_email,-->
<!--            u_r_no,-->
<!--            r_title,-->
<!--            r_content,-->
<!--            r_sa_point,-->
<!--            r_reg_date-->
<!--        FROM-->
<!--            tbl_review-->
<!--        WHERE-->
<!--            u_m_email = #{u_m_email}-->
<!--        AND-->
<!--            use_yn = 'Y'-->
<!--    </select>-->

    <!-- [마이페이지]리스트 조회 - 이미지 번호 가져오기 -->
    <select id="selectReviewImgNo" parameterType="Integer" resultType="Integer">
        SELECT
            u_ri_no
        FROM
            tbl_review_image
        WHERE
            r_no = #{r_no}
    </select>

    <!-- [마이페이지]리스트 조회 - 이미지 정보 가져오기 -->
<!--    <select id="selectReviewImgForList" parameterType="Integer" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">-->
<!--    SELECT-->
<!--        r_no, u_ri_no, r_ri_image,-->
<!--    FROM-->
<!--        tbl_review_image ri-->
<!--    WHERE-->
<!--        r_no = #{r_no}-->
<!--    </select>-->

    <!-- [마이페이지]리스트 조회 - 주소 정보 가져오기 -->
<!--    <select id="selectReviewAddressForList" parameterType="Integer" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">-->
<!--        SELECT-->
<!--            r_no, r_xy_no, r_xy_address-->
<!--        FROM-->
<!--            tbl_review_xy-->
<!--        WHERE-->
<!--            r_no = #{r_no}-->
<!--    </select>-->

    <!-- [숙박시설 상세페이지] 리스트 조회 - 리뷰 정보 가져오기 -->
    <select id="selectReviewInfo" parameterType="Integer" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        SELECT
            rr.r_no,
            rr.a_r_no,
            rr.u_m_email,
            rr.u_r_no,
            rr.r_content,
            rr.r_sa_point,
            rr.r_reg_date,
            ar.a_r_check_in,
            ar.a_r_check_out,
            aa.a_acc_name,
            aa.a_acc_no,
            um.u_m_nickname
        FROM
            tbl_review rr
            JOIN
                tbl_admin_room ar
            ON
                ar.a_r_no = rr.a_r_no
            JOIN
                tbl_admin_accommodation aa
            ON
                ar.a_acc_no = aa.a_acc_no
            JOIN
                tbl_user_member um
            ON
                um.u_m_email = rr.u_m_email
        WHERE
            ar.a_acc_no = #{a_acc_no}
        ORDER BY
            rr.r_reg_date desc

        </select>

    <!-- [숙박시설 상세페이지] a_acc_no에 존재하는 r_no 가져오기 -->
    <select id="selectReviewRno" parameterType="Integer" resultType="Integer">
        SELECT
            rr.r_no
        FROM
            tbl_review rr
            JOIN
                tbl_admin_room ar
            ON
                ar.a_r_no = rr.a_r_no
        WHERE
            ar.a_acc_no = #{a_acc_no}
    </select>

    <!-- [숙박시설 상세페이지]리스트 조회 - 이미지 정보 가져오기 -->
    <select id="selectReviewImgForList" parameterType="Integer" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        SELECT
            ri.r_no, ri.u_ri_no, ri.r_ri_image
        FROM
            tbl_review_image ri
        WHERE
            r_no = #{r_no}
    </select>

    <!-- [숙박시설 상세페이지] 리스트 조회 - 주소 정보 가져오기 -->
        <select id="selectReviewAddressForList" parameterType="Integer" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
            SELECT
                r_no, r_xy_no, r_xy_address, r_xy_comment
            FROM
                tbl_review_xy
            WHERE
                r_no = #{r_no}
        </select>

    <!-- [룸 상세페이지] 리스트 조회 - 리뷰 정보 가져오기 -->
    <select id="selectReviewInfoInRoom" parameterType="HashMap" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        SELECT
            rr.r_no,
            rr.a_r_no,
            rr.u_m_email,
            rr.u_r_no,
            rr.r_content,
            rr.r_sa_point,
            rr.isWrite,
            rr.r_reg_date,
            ar.a_r_check_in,
            ar.a_r_check_out,
            aa.a_acc_name,
            aa.a_acc_no,
            um.u_m_nickname
        FROM
            tbl_review rr
            JOIN
                tbl_admin_room ar
            ON
                ar.a_r_no = rr.a_r_no
            JOIN
                tbl_admin_accommodation aa
            ON
                ar.a_acc_no = aa.a_acc_no
            JOIN
                tbl_user_member um
            ON
                um.u_m_email = rr.u_m_email
        WHERE
            ar.a_acc_no = #{a_acc_no}
        AND
            ar.a_r_no = #{a_r_no}
        AND
            isWrite = 1
        ORDER BY
            rr.r_reg_date desc
    </select>

    <!-- [룸 상세페이지] 리스트 조회 - r_no 가져오기 -->
    <select id="selectReviewRnoInRoom" parameterType="Integer" resultType="Integer">
        SELECT
            rr.r_no
        FROM
            tbl_review rr
            JOIN
                tbl_admin_room ar
            ON
                ar.a_r_no = rr.a_r_no
        WHERE
            ar.a_acc_no = #{a_acc_no}
        AND
            ar.a_r_no = #{a_r_no}
    </select>

        <!-- [마이페이지] 상세페이지 조회 - 리뷰 정보 가져오기 -->
    <select id="selectReviewDetail" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        SELECT
            rr.r_no,
            rr.a_r_no,
            rr.u_m_email,
            rr.u_r_no,
            rr.r_content,
            rr.r_sa_point,
            rr.r_reg_date,
            aa.a_acc_name,
            aa.a_acc_no,
            um.u_m_nickname
        FROM
            tbl_review rr
            JOIN
                tbl_admin_room ar
            ON
                ar.a_r_no = rr.a_r_no
            JOIN
                tbl_admin_accommodation aa
            ON
                ar.a_acc_no = aa.a_acc_no
            JOIN
                tbl_user_member um
            ON
                um.u_m_email = rr.u_m_email
        WHERE
            rr.r_no = #{r_no}
        AND
            rr.u_m_email = #{u_m_email}
        AND
            isWrite = 1
    </select>

    <!-- 상세페이지 조회 - 리뷰 이미지 정보 가져오기 -->
    <select id="selectReviewImgForDetail" parameterType="Integer" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        SELECT
            r_no, u_ri_no, r_ri_image
        FROM
            tbl_review_image
        WHERE
            r_no = #{r_no}
    </select>

    <!-- 상세페이지 조회 - 경도, 위도 이미지 정보 가져오기 -->
    <select id="selectReviewXYForDetail" parameterType="Integer" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        SELECT
            r_no, r_xy_no, r_xy_address, r_xy_comment
        FROM
            tbl_review_xy
        WHERE
            r_no = #{r_no}
    </select>

    <!-- [숙박업소] 상세페이지 조회 - 리뷰 정보 가져오기 -->
    <select id="selectReviewDetailForAccm" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto" resultType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        SELECT
            rr.r_no,
            rr.a_r_no,
            rr.u_m_email,
            rr.u_r_no,
            rr.r_content,
            rr.r_sa_point,
            rr.r_reg_date,
            aa.a_acc_no,
            aa.a_acc_name,
            aa.a_acc_address,
            ar.a_r_name,
            um.u_m_nickname
        FROM
            tbl_review rr
            JOIN
                tbl_admin_room ar
            ON
                ar.a_r_no = rr.a_r_no
            JOIN
                tbl_admin_accommodation aa
            ON
                ar.a_acc_no = aa.a_acc_no
            JOIN
                tbl_user_member um
            ON
                um.u_m_email = rr.u_m_email
        WHERE
            rr.r_no = #{r_no}
        AND
            isWrite = 1
    </select>

    <!-- [숙박업소] a_acc_no 뽑아오기 -->
    <select id="selectReviewAccNo" parameterType="Integer" resultType="Integer">
    SELECT
        aa.a_acc_no
    FROM
        tbl_admin_accommodation aa
        JOIN
            tbl_admin_room ar
        ON
            ar.a_acc_no = aa.a_acc_no
        JOIN
            tbl_review rr
        ON
            ar.a_r_no = rr.a_r_no
    WHERE
        rr.r_no = #{r_no}
    </select>

    <!-- 삭제 - 리뷰 정보 삭제(이미지 제외) -->
    <update id="deleteReview" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        UPDATE
            tbl_review
        SET
            use_yn = 'N'
        WHERE
            r_no = #{r_no}
        AND
            u_m_email = #{u_m_email}
    </update>

    <!-- 삭제 - 삭제할 이미지 정보 가져오기 -->
    <select id="selectReviewImg" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto" resultType="String">
        SELECT
            r_ri_image
        FROM
            tbl_review_image
        WHERE
            r_no = #{r_no}
    </select>

    <!-- 삭제 - 이미지 정보 삭제 -->
    <delete id="deleteReviewImg" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        delete ri from
            tbl_review_image ri
        join
            tbl_review rr
        on
            ri.r_no = rr.r_no
        where
            rr.u_m_email = #{u_m_email}
    </delete>

    <!-- 삭제 - 삭제할 주소 가져오기 -->
    <select id="selectReviewAddress" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto" resultType="String">
        SELECT
            r_xy_address
        FROM
            tbl_review_xy
        WHERE
            r_no = #{r_no}
    </select>

    <!-- 삭제 - 주소 db에서 삭제 -->
    <delete id="deleteReviewAddress" parameterType="com.btc.swimpyo.backend.dto.room.user.UserReviewDto">
        delete address from
            tbl_review_xy address
        join
            tbl_review rr
        on
            address.r_no = rr.r_no
        where
            rr.u_m_email = #{u_m_email}
    </delete>

    <select id="selectReviewInfoAll" parameterType="Integer" resultType="Map">
        SELECT
            rr.r_no,
            rr.a_r_no,
            rr.u_m_email,
            rr.u_r_no,
            rr.r_content,
            rr.r_sa_point,
            rr.r_reg_date,
            ri.r_ri_image,
            ar.a_r_check_in,
            ar.a_r_check_out,
            aa.a_acc_name,
            aa.a_acc_no,
            um.u_m_nickname
        FROM
            tbl_review rr
        JOIN tbl_admin_room ar ON ar.a_r_no = rr.a_r_no
        JOIN tbl_admin_accommodation aa ON ar.a_acc_no = aa.a_acc_no
        JOIN tbl_user_member um ON um.u_m_email = rr.u_m_email
        JOIN tbl_review_image ri ON rr.r_no = ri.r_no
        WHERE
            ar.a_acc_no = #{a_acc_no}
        ORDER BY
            rr.r_reg_date desc
    </select>

</mapper>